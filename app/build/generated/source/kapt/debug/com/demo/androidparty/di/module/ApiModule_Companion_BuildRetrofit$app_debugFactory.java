// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_Companion_BuildRetrofit$app_debugFactory implements Factory<Retrofit> {
  private final Provider<OkHttpClient.Builder> okHttpClientBuilderProvider;

  public ApiModule_Companion_BuildRetrofit$app_debugFactory(
      Provider<OkHttpClient.Builder> okHttpClientBuilderProvider) {
    this.okHttpClientBuilderProvider = okHttpClientBuilderProvider;
  }

  @Override
  public Retrofit get() {
    return buildRetrofit$app_debug(okHttpClientBuilderProvider.get());
  }

  public static ApiModule_Companion_BuildRetrofit$app_debugFactory create(
      Provider<OkHttpClient.Builder> okHttpClientBuilderProvider) {
    return new ApiModule_Companion_BuildRetrofit$app_debugFactory(okHttpClientBuilderProvider);
  }

  public static Retrofit buildRetrofit$app_debug(OkHttpClient.Builder okHttpClientBuilder) {
    return Preconditions.checkNotNull(ApiModule.Companion.buildRetrofit$app_debug(okHttpClientBuilder), "Cannot return null from a non-@Nullable @Provides method");
  }
}
