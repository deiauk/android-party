// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import android.content.Context;
import com.demo.androidparty.AndroidPartyApp;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApplicationContext$app_debugFactory implements Factory<Context> {
  private final Provider<AndroidPartyApp> instanceProvider;

  public AppModule_ProvideApplicationContext$app_debugFactory(
      Provider<AndroidPartyApp> instanceProvider) {
    this.instanceProvider = instanceProvider;
  }

  @Override
  public Context get() {
    return provideApplicationContext$app_debug(instanceProvider.get());
  }

  public static AppModule_ProvideApplicationContext$app_debugFactory create(
      Provider<AndroidPartyApp> instanceProvider) {
    return new AppModule_ProvideApplicationContext$app_debugFactory(instanceProvider);
  }

  public static Context provideApplicationContext$app_debug(AndroidPartyApp instance) {
    return Preconditions.checkNotNull(AppModule.provideApplicationContext$app_debug(instance), "Cannot return null from a non-@Nullable @Provides method");
  }
}
