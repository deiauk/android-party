// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import com.demo.androidparty.base.ViewModelFactory;
import com.demo.androidparty.ui.list.ServersListFragment;
import com.demo.androidparty.ui.list.ServersListViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ServersListFragmentModule_ProvideServerListViewModel$app_debugFactory implements Factory<ServersListViewModel> {
  private final Provider<ServersListFragment> targetProvider;

  private final Provider<ViewModelFactory> factoryProvider;

  public ServersListFragmentModule_ProvideServerListViewModel$app_debugFactory(
      Provider<ServersListFragment> targetProvider, Provider<ViewModelFactory> factoryProvider) {
    this.targetProvider = targetProvider;
    this.factoryProvider = factoryProvider;
  }

  @Override
  public ServersListViewModel get() {
    return provideServerListViewModel$app_debug(targetProvider.get(), factoryProvider.get());
  }

  public static ServersListFragmentModule_ProvideServerListViewModel$app_debugFactory create(
      Provider<ServersListFragment> targetProvider, Provider<ViewModelFactory> factoryProvider) {
    return new ServersListFragmentModule_ProvideServerListViewModel$app_debugFactory(targetProvider, factoryProvider);
  }

  public static ServersListViewModel provideServerListViewModel$app_debug(
      ServersListFragment target, ViewModelFactory factory) {
    return Preconditions.checkNotNull(ServersListFragmentModule.provideServerListViewModel$app_debug(target, factory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
