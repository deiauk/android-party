// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideHttpLoggingInterceptor$app_debugFactory implements Factory<HttpLoggingInterceptor> {
  @Override
  public HttpLoggingInterceptor get() {
    return provideHttpLoggingInterceptor$app_debug();
  }

  public static ApiModule_ProvideHttpLoggingInterceptor$app_debugFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static HttpLoggingInterceptor provideHttpLoggingInterceptor$app_debug() {
    return Preconditions.checkNotNull(ApiModule.provideHttpLoggingInterceptor$app_debug(), "Cannot return null from a non-@Nullable @Provides method");
  }

  private static final class InstanceHolder {
    private static final ApiModule_ProvideHttpLoggingInterceptor$app_debugFactory INSTANCE = new ApiModule_ProvideHttpLoggingInterceptor$app_debugFactory();
  }
}
