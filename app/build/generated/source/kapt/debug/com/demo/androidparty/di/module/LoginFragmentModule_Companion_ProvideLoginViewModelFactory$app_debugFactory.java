// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import androidx.lifecycle.ViewModel;
import com.demo.androidparty.ui.login.LoginModel;
import com.demo.androidparty.utils.InternetStateProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginFragmentModule_Companion_ProvideLoginViewModelFactory$app_debugFactory implements Factory<ViewModel> {
  private final Provider<LoginModel> modelProvider;

  private final Provider<InternetStateProvider> internetStateProvider;

  public LoginFragmentModule_Companion_ProvideLoginViewModelFactory$app_debugFactory(
      Provider<LoginModel> modelProvider, Provider<InternetStateProvider> internetStateProvider) {
    this.modelProvider = modelProvider;
    this.internetStateProvider = internetStateProvider;
  }

  @Override
  public ViewModel get() {
    return provideLoginViewModelFactory$app_debug(modelProvider.get(), internetStateProvider.get());
  }

  public static LoginFragmentModule_Companion_ProvideLoginViewModelFactory$app_debugFactory create(
      Provider<LoginModel> modelProvider, Provider<InternetStateProvider> internetStateProvider) {
    return new LoginFragmentModule_Companion_ProvideLoginViewModelFactory$app_debugFactory(modelProvider, internetStateProvider);
  }

  public static ViewModel provideLoginViewModelFactory$app_debug(LoginModel model,
      InternetStateProvider internetStateProvider) {
    return Preconditions.checkNotNull(LoginFragmentModule.Companion.provideLoginViewModelFactory$app_debug(model, internetStateProvider), "Cannot return null from a non-@Nullable @Provides method");
  }
}
