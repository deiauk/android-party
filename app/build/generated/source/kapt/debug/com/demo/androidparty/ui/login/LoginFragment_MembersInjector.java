// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.ui.login;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginFragment_MembersInjector implements MembersInjector<LoginFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<LoginViewModel> viewModelProvider;

  public LoginFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<LoginViewModel> viewModelProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<LoginFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<LoginViewModel> viewModelProvider) {
    return new LoginFragment_MembersInjector(androidInjectorProvider, viewModelProvider);}

  @Override
  public void injectMembers(LoginFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("com.demo.androidparty.ui.login.LoginFragment.viewModel")
  public static void injectViewModel(LoginFragment instance, LoginViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
