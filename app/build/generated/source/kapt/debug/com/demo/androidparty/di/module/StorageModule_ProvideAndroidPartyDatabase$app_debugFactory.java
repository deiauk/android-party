// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import android.content.Context;
import com.demo.androidparty.storage.database.AndroidPartyDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StorageModule_ProvideAndroidPartyDatabase$app_debugFactory implements Factory<AndroidPartyDatabase> {
  private final Provider<Context> contextProvider;

  public StorageModule_ProvideAndroidPartyDatabase$app_debugFactory(
      Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AndroidPartyDatabase get() {
    return provideAndroidPartyDatabase$app_debug(contextProvider.get());
  }

  public static StorageModule_ProvideAndroidPartyDatabase$app_debugFactory create(
      Provider<Context> contextProvider) {
    return new StorageModule_ProvideAndroidPartyDatabase$app_debugFactory(contextProvider);
  }

  public static AndroidPartyDatabase provideAndroidPartyDatabase$app_debug(Context context) {
    return Preconditions.checkNotNull(StorageModule.provideAndroidPartyDatabase$app_debug(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
