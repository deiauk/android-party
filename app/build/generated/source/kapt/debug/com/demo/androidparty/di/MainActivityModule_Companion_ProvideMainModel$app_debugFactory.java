// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di;

import com.demo.androidparty.storage.preferences.AppPreferences;
import com.demo.androidparty.ui.main.MainModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivityModule_Companion_ProvideMainModel$app_debugFactory implements Factory<MainModel> {
  private final Provider<AppPreferences> prefsProvider;

  public MainActivityModule_Companion_ProvideMainModel$app_debugFactory(
      Provider<AppPreferences> prefsProvider) {
    this.prefsProvider = prefsProvider;
  }

  @Override
  public MainModel get() {
    return provideMainModel$app_debug(prefsProvider.get());
  }

  public static MainActivityModule_Companion_ProvideMainModel$app_debugFactory create(
      Provider<AppPreferences> prefsProvider) {
    return new MainActivityModule_Companion_ProvideMainModel$app_debugFactory(prefsProvider);
  }

  public static MainModel provideMainModel$app_debug(AppPreferences prefs) {
    return Preconditions.checkNotNull(MainActivityModule.Companion.provideMainModel$app_debug(prefs), "Cannot return null from a non-@Nullable @Provides method");
  }
}
