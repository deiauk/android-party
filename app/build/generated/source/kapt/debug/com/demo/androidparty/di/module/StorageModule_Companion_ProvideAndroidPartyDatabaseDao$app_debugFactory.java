// Generated by Dagger (https://dagger.dev).
package com.demo.androidparty.di.module;

import com.demo.androidparty.storage.database.AndroidPartyDatabase;
import com.demo.androidparty.storage.database.ServerDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StorageModule_Companion_ProvideAndroidPartyDatabaseDao$app_debugFactory implements Factory<ServerDao> {
  private final Provider<AndroidPartyDatabase> databaseProvider;

  public StorageModule_Companion_ProvideAndroidPartyDatabaseDao$app_debugFactory(
      Provider<AndroidPartyDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ServerDao get() {
    return provideAndroidPartyDatabaseDao$app_debug(databaseProvider.get());
  }

  public static StorageModule_Companion_ProvideAndroidPartyDatabaseDao$app_debugFactory create(
      Provider<AndroidPartyDatabase> databaseProvider) {
    return new StorageModule_Companion_ProvideAndroidPartyDatabaseDao$app_debugFactory(databaseProvider);
  }

  public static ServerDao provideAndroidPartyDatabaseDao$app_debug(AndroidPartyDatabase database) {
    return Preconditions.checkNotNull(StorageModule.Companion.provideAndroidPartyDatabaseDao$app_debug(database), "Cannot return null from a non-@Nullable @Provides method");
  }
}
